<?xml version="1.0" encoding="UTF-8"?>
<Products>
    About
        DM - All the terms you should know whether it's client or server's perspective.
        PM - What all was there and even added.
    <SezOnline>
        DM
            Client - UI
            Server - 
                Learning - Certifications every year.
                Specification - SRM Document.
                Design
                    Manager - Waterfall approach.
                    Arch - Excel Traceability Matrix.
                Implementation
                    Front end - ASPX Pages (handcoded), ?JS, etc.
                    Coding - C#
                    IDE - Visual Studio
                    Framework - 
                        Application Server - DOTNET Framework 2.0 Stack
                        IIS Web server (Kestral later)
                    DB - MS SQL.
        Others - LINUX shell, Remote connection thru Citrix, Excel, MySQL Scripts, Proprietary ATT and Belgacom tools.
    </SezOnline>
    <IIITB></IIITB>
    <HadoopAPISelector>
        DM 
            Client - ?API, ?UI.
                Front end - Bootstrap based UI calling REST API for health check.
                Sprintboot supports.
            Server - 
                Specifications - Confluence Page.
                Design
                    StarUML - UML Diagrams
                    Arch - Design Patterns, VMs, AWS, Private Cloud, Ambari.
                    Manager - Apache JIRA.
                Implementation
                    Config - Properties API.
                    IDE - Eclipse
                    Coding - JAVA.
                    Code Management - Maven, GIT.
                    Platforms - HDP on CentOS, Hadoop 2.0, Spark, HIVE, Drill, Presto, Sqoop. Coding framework - our own nth else.
                    Utils - REST API, Ambari, web Scraping, shell scriping.
                    Tools - MOBA, SCP.
                Testing - JUnit
                Deployment - X
                Maintenance - Log4J, Debugger.
    </HadoopAPISelector>
    <StreamingDataStorageSaving>
        DM
        Client - 
            Command Line utility.
            Excel for visualization of results.
        Server
            Specifications - Confluence Page.
            Design
                Arch - Design Patterns, VMs. UML for IOT App.
                Manager - X.
            Implementation
                Config - Properties API.
                IDE - Eclipse.
                Coding - JAVA.
                Framework - our own and nth else.
                Code Management - Maven, GIT.
                Utils - Multithreading semaphores, shell scripts for DB shells (like writing script for total records), Libs for distributions number generator.
                Persistence - HBase, Cassandra.
            Testing - X.
            Deployment - Customer Facing in another floor.
            Maintenance - Log4J, Debugger.
    </StreamingDataStorageSaving>
    <BYD>
    BYD - Sume view of BYD or SAP (Very important). The next task would just be to figure out CRUD for all the following.
        DM
            About - note how it's a DAG with abstract knowledge at the leaves. concrete knowledge of tools and target above that. user's view at the top or root. actually root is seva vritti.
            Clients and Services - user's perspective
                    Documentation - help.sap.com release notes.
                    Analytics - BYD OLAP.
                    UI
                            Background Jobs
                            Open Jobs
                            Data Management 
                                    Views - OWL instances. QAF Create Edit. OIF view or edit in detail, Factsheet view.
                                    Types of Data
                                            Master
                                            BC
                                            Transactional
                                            Reuse component - approval, authorizations (users and wcv), etc.
                                    Operations 
                                            Create - from scratch or tools, from reference, from copy.
                                            Retrieve - Queries for interesting views - different statuses. Sort or filter (advanced filter) on column.
                                            Update - different screens.
                                            Delete - delete, void, cancel.
                            User levels - key user, normal user, partners, etc.
                    Android Mobile App for Shopping cart, etc.
                    Excel
                    Collaboration Window
                    Web Services
                            OData Services in BYD.
                            REST API - Postman, SOAP Integration - SOAP UI, RMI.
                            PI A2X - using SOAP UI and others.
                    Adobe PDF - output management and also taking inputs.
                    Audio BYD - Alexa BYD Integration POC.
                    Chatbot support (similarly - menu driven chatbot like amazon).
            Servers - Development Perspective
                    Specifications or Requirements - Customer Influence. OPEN SAP.
                    Design or Planning - 
                            Mgmt - JIRA for backlogs and bugs, etc. Scrum setup.
                            Arch - PPT. Excel for CDT. UML Diagrams for archs existing and new.
                    Implementation - RMDA centralized for links and developer authorizations.
                            Learning - Lynda or LinkedIn for abstract learning. Successmaps for concrete learning - abap and gdpr.
                            Documentation - Wiki. Confluence.
                            Front end - UI Designer.
                                    Framework - Silverlight, UI5 on Fiori principles.
                                    Embedded Components.
                                    UI Javascript files and ruby scripts.
                            IDE - VS Code, Cloud Application Studio for partners or PDI or extensions. SAP GUI. ABAP on Eclipse.
                            Configurations - MDRS. se80. JSON or TS Files.
                            Framework or Platform or Libraries
                                    Web Server - Node, Express.
                                    Application Server - BAF. Netweaver / NGAP/ X4 or BAF.
                                    Libs - Nexus, Leonardo, SCP, etc.
                            Coding - se24, se38, ABAP on Eclipse, VS Code in Nodejs/ts.
                                    BYD Logs - tracert, debugging, etc.
                            Analytics - Cloud Reporting Analytics, OLAP on BYD. TREX.
                            Code Mgmt - inbuilt into tools.
                            Databases - se16. UML. HANA DB.
                    Testing - Start tool, Start on Web IDE, BOUM2.
                    Deployment - BYD tool SPC. se09. BYD System Landscape.
                    Maintenance Support - DLM, Internal incident, SAP Incight, CAM, CSS NG Tool, Manager or engineer assistant (centralized view with some detailing). L1, L2, L3.
                        Hotfixes, Verification Patch VP, EP - Emergency Patch.
        PM - Yet to be done.
    </BYD>
    <NSME>
        DM
        Client
            UI - FIN centered.
                Backgrounds Jobs
                Regular UI.
        Server - Lots of debugging and understanding and hacks and communication like startup mode.
            Design - Side car integration with BYD instead of NSME.
            Implementation - 
                UI Framework - OpenUI5.
                UIDesigner (UI Configuration), making changes to XML and Javascript debugging in browser and copying RUBY -> JS from BYD.
                IDE - VS Code, ABAP Delegation.
                Framework - X4 (Application), Express (Web).
                Running Platform - NodeJS.
                Coding - JS, TS.
                Configuration - TS Files -> JSON Files.
                Code Management - includes build, versioning, etc - Lerna, npm, git.
                Persistence - Postgres thru PGAdmin - no FK.
            Testing - Test shell on Web. Mocha / Chai Scripts. Start Scripts.
            Deployment - Kubernetes and Docker.
            Maintenance - JIRA Bugs raise and address.
    </NSME>
    <IOTDSCBIGDATA>
        
    </IOTDSCBIGDATA>
    <SAPInternals>
        SAP - JIRA
            Dashboard
                    Project
                            Teams - quick filters
                            Boards
                                    Backlog
                                            EPIC - actually parent of backlog.
                                            Active Sprints View
                                            Stories (view for active ones) - status, SP, date, desc, comment, subtasks, checklist, assignments (reported by, assignee), priority, epic.
                                                    Activity Log - Comments, worklog, history, activity, transitions.
                                                    Zephyr Test, Pending Corresponding story.
                                    Release
                                    Issues
                                    Components, Project link, Structure, tests, business processes, risks.
                            Issues
                            Structure, Tests, SME JIRA, Assets.
            Implementation - User requirements (from n sources) concretized on roadmap with features or deliverables or ?epics we are gonna work on.
                    This is complete FOE we gonna support - call it Epic to be centrally implemented, tested b4 released.
                    Epic broken down into backlogs - individual "user scenarios" (small branches) that application areas gotta support - backlog to Oasis team - the APO will test the scenario support end to end. 
                            Complete FOE within application area but user scenario with small branches from higher layer perspective.
                    Backlog broken down into user stories - 1 aspect of the "user scenario" like click of button should do xyz, etc.
        Successmap / Concur, weekend Allowance, etc.
        SAP Utils 
            Communication - MS Teams, Skype, Outlook, Zoom, corporate portal and its tools.
            Network - Big Edge IP Client. Direct Access.
            File Sharing - Shared Drive, sharepoint, slack.
            Services - Flexben, Concur, Weekend allowance, SAP EPR tools thru corporate portals.
    </SAPInternals>
</Products>